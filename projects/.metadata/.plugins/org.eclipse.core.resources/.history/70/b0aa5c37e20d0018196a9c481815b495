/*
 * labGPIO0.cpp
 *
 *  Created on: Feb 9, 2018
 *      Author: cborm
 */

#include "labGPIO0.h"
#include <LPC17xx.h>
#include "stdlib.h"
#include "stdio.h"
#include "FreeRTOS.h"
#include "task.h"

LabGPIO_0::LabGPIO_0(uint8_t pin)
{
    // TODO Auto-generated constructor stub
    pinNum = pin;
    portNum = 1;
}

LabGPIO_0::~LabGPIO_0()
{
    // TODO Auto-generated destructor stub
}


       /**
        * Should alter the hardware registers to set the pin as an input
        */
void LabGPIO_0::setAsInput()
{
    LPC_GPIO0->FIOCLR=(1<<pinNum);
}
/**
* Should alter the hardware registers to set the pin as an input
*/
void LabGPIO_0::setAsOutput()
{
    LPC_GPIO0->FIOSET=(1<<pinNum);
}
/**
* Should alter the set the direction output or input depending on the input.
*
* @param {bool} output - true => output, false => set pin to input
*/
void LabGPIO_0::setDirection(bool output)
{
    if(output==true){
        LPC_GPIO0->FIODIR=(1<<pinNum);
    }
    else{
        LPC_GPIO0->FIODIR=(1<<pinNum);
    }


}
/**
* Should alter the hardware registers to set the pin as high
*/
void LabGPIO_0::setHigh()
{
    LPC_GPIO0->FIOSET=(1<<pinNum);
}
/**
* Should alter the hardware registers to set the pin as low
*/
void LabGPIO_0::setLow()
{
    LPC_GPIO0->FIOCLR=(1<<pinNum);
}
/**
* Should alter the hardware registers to set the pin as low
*
* @param {bool} high - true => pin high, false => pin low
*/
void LabGPIO_0::set(bool high)
{
    if(high==true){
        LPC_GPIO0->FIOSET=(1<<pinNum);
    }
    else{
        LPC_GPIO0->FIOCLR=(1<<pinNum);
    }
}
/**
* Should return the state of the pin (input or output, doesn't matter)
*
* @return {bool} level of pin high => true, low => false
*/
bool LabGPIO_0::getLevel()
{
    if(LPC_GPIO0->FIOPIN & (1<<pinNum)){
           printf("Getlevel returned true\n");
           return (true);
       }
       else{

           return (false);
       }
}

LabGPIO_1::LabGPIO_1(uint8_t pin)
{
    // TODO Auto-generated constructor stub
    pinNum = pin;
    portNum = 1;
}

LabGPIO_1::~LabGPIO_1()
{
    // TODO Auto-generated destructor stub
}


       /**
        * Should alter the hardware registers to set the pin as an input
        */
void LabGPIO_1::setAsInput()
{
    LPC_GPIO0->FIOCLR=(1<<pinNum);
}
/**
* Should alter the hardware registers to set the pin as an input
*/
void LabGPIO_1::setAsOutput()
{
    LPC_GPIO0->FIOSET=(1<<pinNum);
}
/**
* Should alter the set the direction output or input depending on the input.
*
* @param {bool} output - true => output, false => set pin to input
*/
void LabGPIO_1::setDirection(bool output)
{
    if(output==true){
        LPC_GPIO0->FIODIR=(1<<pinNum);
    }
    else{
        LPC_GPIO0->FIODIR=(1<<pinNum);
    }


}
/**
* Should alter the hardware registers to set the pin as high
*/
void LabGPIO_1::setHigh()
{
    LPC_GPIO0->FIOSET=(1<<pinNum);
}
/**
* Should alter the hardware registers to set the pin as low
*/
void LabGPIO_1::setLow()
{
    LPC_GPIO0->FIOCLR=(1<<pinNum);
}
/**
* Should alter the hardware registers to set the pin as low
*
* @param {bool} high - true => pin high, false => pin low
*/
void LabGPIO_1::set(bool high)
{
    if(high==true){
        LPC_GPIO0->FIOSET=(1<<pinNum);
    }
    else{
        LPC_GPIO0->FIOCLR=(1<<pinNum);
    }
}
/**
* Should return the state of the pin (input or output, doesn't matter)
*
* @return {bool} level of pin high => true, low => false
*/
bool LabGPIO_1::getLevel()
{
    if(LPC_GPIO1->FIOPIN & (1<<pinNum)){
        printf("Getlevel returned true\n");
        return true;
    }
//    else{
        printf("Getlevel returned false\n");
        return false;
  //  }
}
