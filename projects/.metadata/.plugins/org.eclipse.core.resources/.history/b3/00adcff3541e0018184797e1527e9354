/*
 * LabSPI.cpp
 *
 *  Created on: Mar 2, 2018
 *      Author: cborm
 */

#include <LabSPI.h>

LabSPI::LabSPI()
{
    // TODO Auto-generated constructor stub

}

LabSPI::~LabSPI()
{
    // TODO Auto-generated destructor stub
}


/**
     * 1) Powers on SPPn peripheral
     * 2) Set peripheral clock
     * 3) Sets pins for specified peripheral to MOSI, MISO, and SCK
     *
     * @param peripheral which peripheral SSP0 or SSP1 you want to select.
     * @param data_size_select transfer size data width; To optimize the code, look for a pattern in the datasheet
     * @param format is the code format for which synchronous serial protocol you want to use.
     * @param divide is the how much to divide the clock for SSP; take care of error cases such as the value of 0, 1, and odd numbers
     *
     * @return true if initialization was successful
     */
bool LabSPI::init(Peripheral peripheral, uint8_t data_size_select, FrameModes format, uint8_t divide){

    return 0;
}

    /**
     * Transfers a byte via SSP to an external device using the SSP data register.
     * This region must be protected by a mutex static to this class.
     *
     * @return received byte from external device via SSP data register.
     */
uint8_t LabSPI::transfer(uint8_t send){
    return 1;
}



